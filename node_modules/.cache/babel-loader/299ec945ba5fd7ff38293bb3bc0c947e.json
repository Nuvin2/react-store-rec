{"ast":null,"code":"var _jsxFileName = \"/Users/navinsun/Desktop/store-rec/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProduct = () => {\n      let products = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProduct = [...this.state.products];\n      const index = tempProduct.indexOf(this.getItem(id));\n      const product = tempProduct[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = parseFloat((product.count * product.price).toFixed(2));\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = parseFloat((product.count * product.price).toFixed(2));\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removeProduct = tempProducts[index];\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          product: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProduct();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.15;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = parseFloat((subTotal + tax).toFixed(2));\n      subTotal = parseFloat(subTotal.toFixed(2));\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProduct();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/navinsun/Desktop/store-rec/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProduct","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","tempProduct","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","parseFloat","toFixed","decrement","removeItem","tempProducts","filter","removeProduct","clearCart","subTotal","map","tempTax","tax","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  };\n  componentDidMount() {\n    this.setProduct();\n  }\n  setProduct = () => {\n    let products = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item };\n      products = [...products, singleItem];\n    });\n    this.setState(() => {\n      return { products };\n    });\n  };\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n  addToCart = id => {\n    let tempProduct = [...this.state.products];\n    const index = tempProduct.indexOf(this.getItem(id));\n    const product = tempProduct[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(\n      () => {\n        return { products: tempProduct, cart: [...this.state.cart, product] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  increment = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = parseFloat((product.count * product.price).toFixed(2));\n    this.setState(\n      () => {\n        return { cart: [...tempCart] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  decrement = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n    if (product.count === 0) {\n      this.removeItem(id);\n    }else{\n\n      product.total = parseFloat((product.count * product.price).toFixed(2));\n      this.setState(\n        () => {\n          return { cart: [...tempCart] };\n        },\n        () => {\n          this.addTotals();\n        }\n      );\n    }\n  };\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n    tempCart = tempCart.filter(item => item.id !== id);\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removeProduct = tempProducts[index];\n    removeProduct.inCart = false;\n    removeProduct.count = 0;\n    removeProduct.total = 0;\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          product: [...tempProducts]\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setProduct();\n        this.addTotals();\n      }\n    );\n  };\n  addTotals = () => {\n    let subTotal = 0;\n    this.state.cart.map(item => (subTotal += item.total));\n    const tempTax = subTotal * 0.15;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = parseFloat((subTotal + tax).toFixed(2));\n    subTotal = parseFloat(subTotal.toFixed(2));\n    this.setState(() => {\n      return { cartSubTotal: subTotal, cartTax: tax, cartTotal: total };\n    });\n  };\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}