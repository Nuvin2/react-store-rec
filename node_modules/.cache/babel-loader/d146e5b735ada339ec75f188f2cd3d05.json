{"ast":null,"code":"var _jsxFileName = \"/Users/navinsun/Desktop/store-rec/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/navinsun/Desktop/store-rec/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts, detailProduct } from './data';\n\n\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  state={\n    products:[],\n    detailProduct:detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct:detailProduct,\n    cartSubTotal:0,\n    cartTax:0,\n    cartTotal:0\n  }\n  componentDidMount(){\n    this.setProducts();\n  }\n  setProducts = () =>{\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    })\n    this.setState(()=>{\n      return { products:tempProducts };\n    })\n  }\n\n  getItem = id =>{\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  }\n\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(()=>{\n      return{detailProduct:product}\n    })\n  }\n  addToCart = id =>{\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(()=>{\n      return {products: tempProducts, cart:[...this.state.cart,\n         product] };\n    },\n    ()=>{\n      this.addTotals();\n    });\n  };\n  \n  openModal = id =>{\n    const product = this.getItem(id);\n    this.setState(()=>{\n      return { modalProduct:product, modalOpen:true }\n    })\n  }\n  closeModal = () =>{\n    this.setState(()=>{\n      return {modalOpen:false}   \n     })\n  }\n  increment = id =>{\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item=>item.id === id)\n    \n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(()=>{return{cart:[...tempCart]}}\n    ,()=>{this.addTotals()})\n  }\n  decrement = id =>{\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item=>item.id === id)\n    \n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count - 1;\n\n    if(product.count === 0){\n      this.removeItem(id)\n    }\n    else{\n      product.total = product.count * product.price;\n\n      this.setState(()=>{return{cart:[...tempCart]}}\n      ,()=>{this.addTotals()})\n    }\n  }\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    tempCart = tempCart.filter(item => item.id !== id);\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    this.setState(()=>{\n      return{\n        cart:[...tempCart],\n        products: [...tempProducts]\n      };\n    },\n    ()=>{\n      this.addTotals();\n\n    }\n    )\n  }\n  clearCart = () =>{\n    this.setState(()=>{\n      return {cart:[]}\n    },()=>{\n      this.setProducts();\n      this.addTotals();\n    })\n  }\n  addTotals = () =>{\n    let subTotal = 0;\n    this.state.cart.map(item => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(()=>{\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      }\n    })\n  }\n  render() {\n    return (\n      <ProductContext.Provider \n      value={{\n        ...this.state,\n        handleDetail:this.handleDetail,\n        addToCart:this.addToCart,\n        openModal:this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment ,\n        decrement: this.decrement ,\n        removeItem: this.removeItem ,\n        clearCart: this.clearCart \n      }}> \n        {this.props.children}\n      </ProductContext.Provider> \n\n        \n      \n    )\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n\n\n"]},"metadata":{},"sourceType":"module"}